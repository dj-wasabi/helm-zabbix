{{- if and .Values.web.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zabbix-web
  namespace: "{{ .Values.zabbix.namespace }}"
  labels:
    app: zabbix-web
    {{- include "helm-zabbix.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zabbix-web
  template:
    metadata:
      labels:
        app: zabbix-web
    spec:
      containers:
        - name: zabbix-web
          {{ if .Values.web.image -}}
          image: "{{ .Values.web.image }}"
          {{ else -}}
          image: zabbix/zabbix-web-{{ .Values.web.webserver }}-{{ .Values.zabbix.database.type }}:alpine-{{ if .Values.web.version }}{{ .Values.web.version }}{{- else }}{{ .Values.zabbix.version }}{{- end }}
          {{- end }}
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
          - containerPort: 8080
            name: web-http
          - containerPort: 8443
            name: web-https
          {{- if hasKey .Values.web "resources" }}
          resources:
          {{- toYaml .Values.web.resources | nindent 12 }}
          {{- end }}
          {{- if hasKey .Values.web "livenessProbe" }}
          livenessProbe:
          {{- toYaml .Values.web.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if hasKey .Values.web "readinessProbe" }}
          readinessProbe:
          {{- toYaml .Values.web.readinessProbe | nindent 12 }}
          {{- end }}
          env:
          - name: ZBX_SERVER_HOST
            value: "zabbix-server-0.{{ .Release.Namespace }}.svc"
          - name: ZBX_SERVER_NAME
            value: "Zabbix kubernetes"
          - name: PHP_TZ
            value: "{{ .Values.web.timezone }}"
          {{- if eq .Values.zabbix.database.type "mysql" }}
          - name: MYSQL_USER
            valueFrom:
             secretKeyRef:
              name: server-db-secret
              key: db-zbx-user
          - name: MYSQL_PASSWORD
            valueFrom:
             secretKeyRef:
              name: server-db-secret
              key: db-zbx-pass
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
             secretKeyRef:
              name: server-db-secret
              key: db-root-pass
          - name: MYSQL_DATABASE
            value: "{{ .Values.zabbix.database.name }}"
          {{- end }}
          {{- if eq .Values.zabbix.database.type "pgsql" }}
          - name: POSTGRES_USER
            valueFrom:
             secretKeyRef:
              name: server-db-secret
              key: db-zbx-user
          - name: POSTGRES_PASSWORD
            valueFrom:
             secretKeyRef:
              name: server-db-secret
              key: db-zbx-pass
          - name: POSTGRES_PASSWORD_FILE
            valueFrom:
             secretKeyRef:
              name: server-db-secret
              key: db-root-pass
          - name: POSTGRES_DB
            value: "{{ .Values.zabbix.database.name }}"
          {{- end }}
          - name: DB_SERVER_HOST
          {{- if .Values.server.database.host }}
            value: "{{ .Values.server.database.host }}"
          {{- else }}
            value: "{{ .Values.zabbix.database.host }}"
          {{- end }}
          envFrom:
          - configMapRef:
              name: zabbix-web
          securityContext:
            privileged: {{ .Values.web.securityContext.privileged }}
            runAsUser: {{ .Values.web.securityContext.runAsUser }}
          volumeMounts:
          - name: zabbix-web-ssl
            mountPath: /etc/ssl/nginx
            readOnly: true
      volumes:
       - hostPath:
          path: /home/dotneft/zbx/zbx_env/etc/ssl/nginx/
         name: zabbix-web-ssl
      {{- if .Values.web.tolerations }}
      tolerations:
        {{- toYaml .Values.web.tolerations | nindent 8 }}
      {{- end }}
{{- end }}
